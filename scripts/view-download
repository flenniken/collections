#!/bin/bash

# Show log information for a download.

# parameters: day and download id

# Make sure we're running inside the docker container.
if [[ -z "${coder_env}" ]]; then
  echo "Error: run in the docker container."
  exit
fi

day=$1
downloadId=$2

usage="Specify the day and download id, i.e.: scripts/view-logs 2025-02-05 UzCwQzMw"

if [ "$day" == "" ] || [ "${#day}" != "10" ]; then
  echo "$usage"
  echo "day: ${day}"
  echo "day length: ${#day}"
  exit
fi
if [ "$downloadId" == "" ] || [ "${#downloadId}" != "8" ] ; then
  echo "$usage"
  echo "download id: ${downloadId}"
  echo "download id length: ${#downloadId}"
  exit
fi

# Find all the download requests in the cloudfront logs.
find logs/cloudfront -type f \
  | xargs zcat \
  | grep $downloadId \
  | awk '/^[0-9]/ {id=substr($14,4,8); if (id == "") id="-"; \
     user=substr($14,18,8); if (user == "") user="-";\
     printf "%s %s %9s %s %8s %8s %10s %s %s\n", $3, $4, $5, $11, \
     id, user, $31, $21, $10}' \
  | sort

# Find all the lambda log files for the given day and write the
# filenames to a file.
find logs/lambda -type f \
  | grep "$day" \
  > lambda-files.txt

if [ ! -s "lambda-files.txt" ]; then
  echo "No lambda log files found with that day."
  exit
fi

# Create the requests-lines.txt file that contains the request ids of
# all the lines associated with the download id.
cat lambda-files.txt \
  | xargs zgrep "$downloadId" \
  | grep -Eo '[[:xdigit:]]{8}-([[:xdigit:]]{4}-){3}[[:xdigit:]]{12}' \
  | sort | uniq \
  > requests-lines.txt

if [ ! -s "requests-lines.txt" ]; then
  echo "No lambda log files found with that download id."
  exit
fi

# Show the lines that match the request line ids. Sort by the order the
# requests come in then by time so each request's lines are next to
# each other.
cat lambda-files.txt \
  | xargs zcat \
  | grep -F -f requests-lines.txt \
  | awk '\
    / START RequestId: / \
      {id = substr($4, 0, 8); \
      if (!(id in ids)) { ids[id] = NR};
      printf "%4s %s %s %s\n", \
      ids[id], substr($1, 0, 10), substr($1, 12, 12), id; \
      printf "%4s %s %s %s ", \
      ids[id], substr($1, 0, 10), substr($1, 12, 12), id; print $5, $6} \
    /INFO/ \
      {id = substr($3, 0, 8); \
      if (!(id in ids)) { ids[id] = NR};
      printf "%4s %s %s %s ", \
      ids[id], substr($1, 0, 10), substr($1, 12, 12), id; \
      for (i = 5; i <= NF; i++) printf "%s ", $i; print ""} \
    / REPORT RequestId: / \
      {id = substr($4, 0, 8); \
      if (!(id in ids)) { ids[id] = NR};
      printf "%4s %s %s %s ", \
      ids[id], substr($1, 0, 10), substr($1, 12, 12), id; \
      printf "%s %s\n", $6, $7} \
    ' \
  | sort -k1,1n -k3,3 \
  | awk '{for (i = 2; i <= NF; i++) printf "%s ", $i; print ""}'

rm -f requests-lines.txt
rm -f lambda-files.txt
