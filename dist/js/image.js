"use strict";var CJson,cJson,cJsonOriginal,__awaiter=this&&this.__awaiter||function(t,i,r,s){return new(r=r||Promise)(function(a,e){function l(t){try{o(s.next(t))}catch(t){e(t)}}function n(t){try{o(s.throw(t))}catch(t){e(t)}}function o(t){var e;t.done?a(t.value):((e=t.value)instanceof r?e:new r(function(t){t(e)})).then(l,n)}o((s=s.apply(t,i||[])).next())})};!function(t){t.Image=class{};t.Collection=class{}}(CJson=CJson||{});let imageIx=0,availWidth=0,availHeight=0,area=null;window.addEventListener("load",handleLoad),window.addEventListener("touchstart",handleTouchStart),window.addEventListener("restoreimage",handleRestoreImage,!1),window.addEventListener("touchmove",handleTouchMove,{passive:!1}),window.addEventListener("resize",handleResize),document.addEventListener("touchend",handleTouchEnd,!1),document.addEventListener("touchcancel",handleTouchCancel,!1);class Timer{constructor(){this.start=performance.now()}seconds(){return(performance.now()-this.start)/1e3}log(t){log(three(this.seconds())+"s ----- "+t)}}const startTimer=new Timer;function get(t){return document.getElementById(t)}function log(t){console.log(t)}function logError(t){console.error(t)}function two(t){return t.toFixed(2)}function three(t){return t.toFixed(3)}function handleLoad(){return __awaiter(this,void 0,void 0,function*(){startTimer.log(`load event; the collection contains ${cJson.images.length} images`),area=get("area"),get("images").setAttribute("touch-action","none"),setFirstImage(),startTimer.log("setAvailableArea"),setAvailableArea(),startTimer.log("sizeImages"),sizeImages(),document.body.style.visibility="visible",document.body.style.opacity="1",startTimer.log("load Done")})}function setFirstImage(){log("window.location.search: "+window.location.search);var t=new URLSearchParams(window.location.search).get("image"),t=(log("Image query string: "+t),parseInt(t,10));log("First image: "+((imageIx=!isNaN(t)&&1<=t&&t<=cJson.images.length?t-1:0)+1))}function setAvailableArea(){var t=document.documentElement.clientWidth;let e=document.documentElement.clientHeight;return e>t&&window.matchMedia("(display-mode: standalone)").matches&&(e+=60,log("Add 60 to height for the top bar.")),t==availWidth&&e==availHeight?(log(`Available size is the same: ${availWidth} x `+availHeight),!1):(availWidth=t,availHeight=e,zpan.minVisible=availWidth/4,area.style.width=availWidth+"px",log(`Available screen size: ${availWidth} x `+availHeight),!0)}function getZoomPoint(t=cJson){var e=availWidth+"x"+availHeight;return t.zoomPoints[e][imageIx]}function sizeImages(){let n=0;var t=availWidth+"x"+availHeight;let o;const i=!(t in cJson.zoomPoints);i?(log("No zoom points for this size, create new zoom points."),log("Existing zoom points: "+Object.keys(cJson.zoomPoints)),o=[],cJson.zoomPoints[t]=o):o=cJson.zoomPoints[t],hscroll.leftEdges.length=0,log("Image zoom points:"),cJson.images.forEach((e,t)=>{(e.width<availWidth||e.height<availHeight)&&logError("small images are not supported"),hscroll.leftEdges.push(n);get("cb"+(t+1)).style.width=availWidth+"px";var a=get("c"+(t+1));a.style.width=availWidth+"px",a.style.height=availHeight+"px";let l;if(i){let t;t=e.width-availWidth>e.height-availHeight?availWidth/e.width:availHeight/e.height,l={scale:t,tx:0,ty:0},o.push(l)}else l=o[t];a=get("i"+(t+1));a.style.transformOrigin="0px 0px",a.style.transform=`translate(${l.tx}px, ${l.ty}px) scale(${l.scale})`,log(`i${t+1}: ${availWidth} x ${availHeight}, `+`scale: ${two(l.scale)}, `+`t: (${two(l.tx)}, ${two(l.ty)})`),n+=availWidth}),area.scrollLeft=hscroll.leftEdges[imageIx],log("area.scrollLeft: "+area.scrollLeft),log("hscroll.leftEdges: "+hscroll.leftEdges)}let zpan={minVisible:10,zooming:!1,start:null,current:null},doubleClick=null,hscroll={minFlick:1,framesPerSec:30,maxDuration:1.5,scrolling:!1,leftEdges:[],startX:null,startY:null,currentX:null,startXTime:null,currentXTime:null,startScrollLeft:null,currentScrollLeft:0};function handleTouchStart(t){if(hscroll.scrolling)t.preventDefault();else{if(hscroll.startScrollLeft=area.scrollLeft,hscroll.currentX=hscroll.startX=t.touches[0].clientX,hscroll.currentXTime=hscroll.startXTime=performance.now(),hscroll.startY=t.touches[0].clientY,log(`touchstart: scroll image: ${imageIx+1}, hscroll.startScrollLeft: `+hscroll.startScrollLeft),1==t.touches.length){if(null!==doubleClick)if(doubleClick.seconds()<.5){const t=new Event("restoreimage");return window.dispatchEvent(t),void(doubleClick=null)}doubleClick=new Timer}else doubleClick=null;var e,a,l;2==t.touches.length&&(zpan.zooming=!0,t.preventDefault(),l=t.touches[0].clientX,e=t.touches[1].clientX,a=t.touches[0].clientY,t=t.touches[1].clientY,zpan.start.cx=(l+e)/2,zpan.start.cy=(a+t)/2,zpan.start.distance=Math.hypot(l-e,a-t),l=getZoomPoint(),zpan.start.scale=l.scale,zpan.start.tx=l.tx,zpan.start.ty=l.ty,cJson.images[imageIx],log(`i${imageIx+1}: touchstart: c: (${two(zpan.start.cx)}, ${two(zpan.start.cy)}) `+`d: ${two(zpan.start.distance)}, scale: ${two(zpan.start.scale)}, `+`t: (${two(zpan.start.tx)}, ${two(zpan.start.ty)})`))}}function handleRestoreImage(t){log("Restore image to its zoom point.");cJson.images[imageIx];let e=getZoomPoint(cJson);const a=getZoomPoint(cJsonOriginal),l=(log(`Zoom point: (${two(e.tx)}, ${two(e.ty)}), scale: `+two(e.scale)),log(`Original zoom point: (${two(a.tx)}, ${two(a.ty)}), scale: `+two(a.scale)),get("i"+(imageIx+1)));l.animate([{transform:`translate(${e.tx}px, ${e.ty}px) scale(${e.scale})`},{transform:`translate(${a.tx}px, ${a.ty}px) scale(${a.scale})`}],{duration:300,iterations:1}).onfinish=t=>{log("Restore image finished"),e.scale=a.scale,e.tx=a.tx,e.ty=a.ty,l.style.transform=`translate(${e.tx}px, ${e.ty}px) scale(${e.scale})`}}function handleTouchMove(n){if(hscroll.scrolling)horizontalScrollMove(n);else{if(!zpan.zooming){var o=Math.abs(hscroll.startX-n.touches[0].clientX);if(Math.abs(hscroll.startY-n.touches[0].clientY)<o)return hscroll.scrolling=!0,doubleClick=null,void horizontalScrollMove(n)}if(2!=n.touches.length)0<n.touches[0].clientY-hscroll.startY&&0===window.scrollY&&(get("to-thumbnails").style.height="50px",n.preventDefault());else if(n.preventDefault(),zpan.zooming){var o=n.touches[0].clientX,i=n.touches[1].clientX,r=n.touches[0].clientY,n=n.touches[1].clientY,s=cJson.images[imageIx],c=getZoomPoint();zpan.current.cx=(o+i)/2,zpan.current.cy=(r+n)/2,zpan.current.distance=Math.hypot(o-i,r-n),zpan.current.scale=zpan.current.distance/zpan.start.distance*zpan.start.scale,1<zpan.current.scale&&(zpan.current.scale=1);let t=s.width*zpan.current.scale,e=s.height*zpan.current.scale;t<availWidth/2&&(zpan.current.scale=availWidth/2/s.width,t=s.width*zpan.current.scale,e=s.height*zpan.current.scale);o=(zpan.start.cx-zpan.start.tx)*zpan.current.scale/zpan.start.scale+zpan.start.tx,i=(zpan.start.cy-zpan.start.ty)*zpan.current.scale/zpan.start.scale+zpan.start.ty;let a=zpan.start.tx-(o-zpan.start.cx)+(zpan.current.cx-zpan.start.cx),l=zpan.start.ty-(i-zpan.start.cy)+(zpan.current.cy-zpan.start.cy);a>availWidth-zpan.minVisible&&(a=availWidth-zpan.minVisible),l>availHeight-zpan.minVisible&&(l=availHeight-zpan.minVisible);a+t<zpan.minVisible&&(a=zpan.minVisible-t);r=l+e;r<zpan.minVisible&&(l=zpan.minVisible-e),c.scale=zpan.current.scale,c.tx=a,c.ty=l,get("i"+(imageIx+1)).style.transform=`translate(${c.tx}px, ${c.ty}px) scale(${c.scale})`}}}function handleTouchCancel(t){log("touchcancel"),handleTouchEnd(t)}function handleTouchEnd(t){const e=[40,25,15,10,5,0],a=get("to-thumbnails");var l=.15/e.length;const n=setInterval(function(){o>=e.length?(clearInterval(n),log("overscrolled back to 0")):(a.style.height=e[o]+"px",o+=1)},1e3*l);let o=0;0==t.touches.length&&hscroll.scrolling?horizontalScrollEnd():zpan.zooming&&(zpan.zooming=!1,cJson.images[imageIx],l=getZoomPoint(),log(`i${imageIx+1}: touchend: c: (${two(zpan.current.cx)}, ${two(zpan.current.cy)}) `+`d: ${two(zpan.current.distance)}, scale: ${two(l.scale)}, `+`t: (${two(l.tx)}, ${two(l.ty)})`))}function logJson(){log(JSON.stringify(cJson,null,2))}function horizontalScrollMove(t){t.preventDefault(),hscroll.currentXTime=performance.now(),hscroll.currentX=t.touches[0].clientX,hscroll.currentScrollLeft=hscroll.startScrollLeft+hscroll.startX-hscroll.currentX,area.scrollLeft=hscroll.currentScrollLeft}function horizontalScrollEnd(){function e(){var t=hscroll.leftEdges.indexOf(area.scrollLeft);-1==t?logError(`area.scrollLeft ${area.scrollLeft} was not found.`):imageIx==t?log(`ScrollEnd: scrolled back to the original item ${imageIx+1}.`):(imageIx=t,log(`ScrollEnd: scroll done: area.scrollLeft: ${area.scrollLeft}, image: `+(imageIx+1))),hscroll.scrolling=!1}var a=hscroll.currentXTime-hscroll.startXTime,l=hscroll.currentX-hscroll.startX,a=Math.abs(l/a)>hscroll.minFlick;let t;t=a?(log("Flick the image."),0<l?-availWidth:availWidth):hscroll.currentScrollLeft>hscroll.startScrollLeft+availWidth/2?availWidth:hscroll.currentScrollLeft<hscroll.startScrollLeft-availWidth/2?-availWidth:0;a=hscroll.currentScrollLeft,l=hscroll.startScrollLeft+t;if(area.scrollLeft==l)e();else{log(`ScrollEnd: animate from ${two(a)} to `+l);var n=availWidth/2,o=hscroll.maxDuration*hscroll.framesPerSec,o=Math.abs(l-a)*o/n;let t=0;const i=distanceList(a,l,o);n=o/hscroll.framesPerSec;log(`ScrollEnd: number of frames: ${i.length}, duration: ${two(n)} seconds`);const r=setInterval(function(){t>=i.length?(clearInterval(r),e()):(area.scrollLeft=i[t],t+=1)},n/1e3)}}function distanceList(e,t,a){var l=[],n=t-e;if(1<a&&1<Math.abs(n)){var o=n/a;for(let t=1;t<a-1;t++)l.push(Math.round(e+o*t))}return l.push(t),l}function handleResize(){var t;null!==area&&((t=new Timer).log("resize"),setAvailableArea()&&(t.log("sizeImages"),sizeImages()),t.log("resize  done"))}